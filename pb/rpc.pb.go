// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

func init() { proto.RegisterFile("rpc.proto", fileDescriptor_77a6da22d6a3feb1) }

var fileDescriptor_77a6da22d6a3feb1 = []byte{
	// 102 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2c, 0x2a, 0x48, 0xd6,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48, 0x92, 0xe2, 0xcd, 0x4d, 0x2d, 0x2e, 0x4e,
	0x4c, 0x4f, 0x85, 0x08, 0x19, 0xe9, 0x73, 0x71, 0x3b, 0x65, 0xe6, 0xe4, 0x04, 0xa7, 0x16, 0x95,
	0x65, 0x26, 0xa7, 0x0a, 0x29, 0x70, 0xb1, 0xe4, 0x17, 0xa4, 0xe6, 0x09, 0x71, 0xe8, 0x15, 0x24,
	0xe9, 0x25, 0x65, 0xe6, 0xe4, 0x48, 0xf1, 0x80, 0x58, 0x45, 0xa9, 0xc5, 0x05, 0xf9, 0x79, 0xc5,
	0xa9, 0x4a, 0x0c, 0x49, 0x6c, 0x60, 0x7d, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x2f, 0x0c,
	0xf0, 0x06, 0x57, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BillServiceClient is the client API for BillService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BillServiceClient interface {
	Open(ctx context.Context, in *Bill, opts ...grpc.CallOption) (*Response, error)
}

type billServiceClient struct {
	cc *grpc.ClientConn
}

func NewBillServiceClient(cc *grpc.ClientConn) BillServiceClient {
	return &billServiceClient{cc}
}

func (c *billServiceClient) Open(ctx context.Context, in *Bill, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/pb.BillService/open", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BillServiceServer is the server API for BillService service.
type BillServiceServer interface {
	Open(context.Context, *Bill) (*Response, error)
}

// UnimplementedBillServiceServer can be embedded to have forward compatible implementations.
type UnimplementedBillServiceServer struct {
}

func (*UnimplementedBillServiceServer) Open(ctx context.Context, req *Bill) (*Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Open not implemented")
}

func RegisterBillServiceServer(s *grpc.Server, srv BillServiceServer) {
	s.RegisterService(&_BillService_serviceDesc, srv)
}

func _BillService_Open_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Bill)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillServiceServer).Open(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.BillService/Open",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillServiceServer).Open(ctx, req.(*Bill))
	}
	return interceptor(ctx, in, info, handler)
}

var _BillService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.BillService",
	HandlerType: (*BillServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "open",
			Handler:    _BillService_Open_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpc.proto",
}
